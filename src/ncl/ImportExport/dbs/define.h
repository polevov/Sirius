////////////////////////////////////////////////////////
//                                                    //
//           Библиотека классов для работы            //
//              с файлами в формате DBS               //
//                      ©2002                         //
//     Разработчик: Полевов Александр Валерьевич      //
//             аспирантура УГТУ-УПИ                   //
//       Механико Машиностроительный Факультет        //
//                 Кафедра САПР                       //
//                                                    //
////////////////////////////////////////////////////////
#ifndef _DBSDEFINE_
#define _DBSDEFINE_

#include <windows.h>
#include <math.h>

//признак реверса в файле DBS
#define REV_NORMAL              0 //Точки в контуре идут в том же порядке, что и в списке точек составляющих контур
#define REV_INVERSE              2 //Точки в контуре идут в обратном порядке, относительно порядка точек в списке точек составляющих контур
#define REV_NORM_INV           1 //Точки в контуре идут в том же порядке, что и в списке точек составляющих контур, но в отдельных сегментах кривой начальная и конечная точки имеют обратный порядок
#define REV_INV_NORM          -1 //Точки в контуре идут в обратном порядке, относительно порядка точек в списке точек составляющих контур, но в отдельных сегментах кривой начальная и конечная точки имеют нормальный порядок

//типы записей в файле DBS
#define TYPE_GEOM_SPLINE    1 //Запись типа 1 содержит геометрию оригинального контура
#define TYPE_GEOM_FIGURE   2 //Запись типа 2 содержит геометрию отображенного контура
#define TYPE_DETAIL_SPLINE  8 //Заппись типа 8 содержит список контуров, из которых состоит деталь
#define TYPE_DETAIL_NAME    26 //Запись типа 26 содержит название детали (8 символов)
#define TYPE_DETAIL_LONG_NAME    28 //Запись типа 26 содержит название детали (30 символов)

//идентификатор в файле задания на раскрой KOL
#define ID_SHEET                      0 //идентификатор листа
#define ID_DETAIL                     1  //идентификатор детали

//погрешность в вычислениях
#define Epsilon                           0.00001

//максимальное число с плавающей точкой float
#define FLOAT_MAX                       3.4E+38f

//определение выходного файла для записи ошибок и резульнатов раскроя
#ifndef EXTERN_OUT_FILE
#define EXTERN_OUT_FILE

extern BOOL Refrehs_View;
//void MsgError();
void nlcGetLastError();

//Число PI
#ifndef PI
#define PI			3.1415926535897932384626433
#endif

#endif
#endif
